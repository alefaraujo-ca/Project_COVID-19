<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0415.1946                               -->
<workbook source-build='2020.2.0 (20202.20.0415.1946)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='COVID19_2020' inline='true' name='federated.0crql0r093apiw1ese62i1fv08de' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='COVID19_2020_Mar' name='textscan.0z85n0u13rk3rs13kbsvq04x8apk'>
            <connection class='textscan' directory='C:/Users/Alessandra/Documents/UofT/databootcamp-homework/Projects/03.COVID-19/Resources/Data' filename='COVID19.csv' password='' server='' />
          </named-connection>
          <named-connection caption='country' name='textscan.09vn5k60o6h00j14i86k71brqlfc'>
            <connection class='textscan' directory='C:/Users/Alessandra/Documents/UofT/Projects/Final/COVID19/Resources/Data/country' filename='country.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[COVID19.csv].[ISO_2]' />
              <expression op='[country.csv].[ISO_2]' />
            </expression>
          </clause>
          <relation connection='textscan.0z85n0u13rk3rs13kbsvq04x8apk' name='COVID19.csv' table='[COVID19#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Days' ordinal='1' />
              <column datatype='date' name='Date' ordinal='2' />
              <column datatype='real' name='ISO_CountryID' ordinal='3' />
              <column datatype='string' name='Country/Region' ordinal='4' />
              <column datatype='string' name='ISO_CountryName' ordinal='5' />
              <column datatype='string' name='Province_Id' ordinal='6' />
              <column datatype='string' name='Province/State' ordinal='7' />
              <column datatype='string' name='Last Update' ordinal='8' />
              <column datatype='real' name='Confirmed' ordinal='9' />
              <column datatype='real' name='Deaths' ordinal='10' />
              <column datatype='real' name='Recovered' ordinal='11' />
              <column datatype='string' name='ISO_2' ordinal='12' />
              <column datatype='string' name='ISO_3' ordinal='13' />
              <column datatype='string' name='Latitude' ordinal='14' />
              <column datatype='string' name='Longitude' ordinal='15' />
            </columns>
          </relation>
          <relation connection='textscan.09vn5k60o6h00j14i86k71brqlfc' name='country.csv' table='[country#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='integer' name='Country_Id' ordinal='1' />
              <column datatype='string' name='Name' ordinal='2' />
              <column datatype='string' name='ISO_2' ordinal='3' />
              <column datatype='string' name='ISO_3' ordinal='4' />
              <column datatype='real' name='Lat' ordinal='5' />
              <column datatype='real' name='Lon' ordinal='6' />
              <column datatype='integer' name='Population' ordinal='7' />
              <column datatype='integer' name='ID_worldometers' ordinal='8' />
              <column datatype='integer' name='Density(P/Km2)' ordinal='9' />
              <column datatype='integer' name='Land Area(Km2)' ordinal='10' />
              <column datatype='real' name='Fert.Rate' ordinal='11' />
              <column datatype='integer' name='Med.Age' ordinal='12' />
              <column datatype='real' name='UrbanPop' ordinal='13' />
              <column datatype='real' name='WorldShare' ordinal='14' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[COVID19.csv].[ISO_2]' />
              <expression op='[country.csv].[ISO_2]' />
            </expression>
          </clause>
          <relation connection='textscan.0z85n0u13rk3rs13kbsvq04x8apk' name='COVID19.csv' table='[COVID19#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Days' ordinal='1' />
              <column datatype='date' name='Date' ordinal='2' />
              <column datatype='real' name='ISO_CountryID' ordinal='3' />
              <column datatype='string' name='Country/Region' ordinal='4' />
              <column datatype='string' name='ISO_CountryName' ordinal='5' />
              <column datatype='string' name='Province_Id' ordinal='6' />
              <column datatype='string' name='Province/State' ordinal='7' />
              <column datatype='string' name='Last Update' ordinal='8' />
              <column datatype='real' name='Confirmed' ordinal='9' />
              <column datatype='real' name='Deaths' ordinal='10' />
              <column datatype='real' name='Recovered' ordinal='11' />
              <column datatype='string' name='ISO_2' ordinal='12' />
              <column datatype='string' name='ISO_3' ordinal='13' />
              <column datatype='string' name='Latitude' ordinal='14' />
              <column datatype='string' name='Longitude' ordinal='15' />
            </columns>
          </relation>
          <relation connection='textscan.09vn5k60o6h00j14i86k71brqlfc' name='country.csv' table='[country#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='integer' name='Country_Id' ordinal='1' />
              <column datatype='string' name='Name' ordinal='2' />
              <column datatype='string' name='ISO_2' ordinal='3' />
              <column datatype='string' name='ISO_3' ordinal='4' />
              <column datatype='real' name='Lat' ordinal='5' />
              <column datatype='real' name='Lon' ordinal='6' />
              <column datatype='integer' name='Population' ordinal='7' />
              <column datatype='integer' name='ID_worldometers' ordinal='8' />
              <column datatype='integer' name='Density(P/Km2)' ordinal='9' />
              <column datatype='integer' name='Land Area(Km2)' ordinal='10' />
              <column datatype='real' name='Fert.Rate' ordinal='11' />
              <column datatype='integer' name='Med.Age' ordinal='12' />
              <column datatype='real' name='UrbanPop' ordinal='13' />
              <column datatype='real' name='WorldShare' ordinal='14' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Confirmed]' value='[COVID19.csv].[Confirmed]' />
          <map key='[Country/Region]' value='[COVID19.csv].[Country/Region]' />
          <map key='[Country_Id]' value='[country.csv].[Country_Id]' />
          <map key='[Date]' value='[COVID19.csv].[Date]' />
          <map key='[Days]' value='[COVID19.csv].[Days]' />
          <map key='[Deaths]' value='[COVID19.csv].[Deaths]' />
          <map key='[Density(P/Km2)]' value='[country.csv].[Density(P/Km2)]' />
          <map key='[F1]' value='[COVID19.csv].[F1]' />
          <map key='[Fert.Rate]' value='[country.csv].[Fert.Rate]' />
          <map key='[ID]' value='[country.csv].[ID]' />
          <map key='[ID_worldometers]' value='[country.csv].[ID_worldometers]' />
          <map key='[ISO_2 (country.csv)]' value='[country.csv].[ISO_2]' />
          <map key='[ISO_2]' value='[COVID19.csv].[ISO_2]' />
          <map key='[ISO_3 (country.csv)]' value='[country.csv].[ISO_3]' />
          <map key='[ISO_3]' value='[COVID19.csv].[ISO_3]' />
          <map key='[ISO_CountryID]' value='[COVID19.csv].[ISO_CountryID]' />
          <map key='[ISO_CountryName]' value='[COVID19.csv].[ISO_CountryName]' />
          <map key='[Land Area(Km2)]' value='[country.csv].[Land Area(Km2)]' />
          <map key='[Last Update]' value='[COVID19.csv].[Last Update]' />
          <map key='[Lat]' value='[country.csv].[Lat]' />
          <map key='[Latitude]' value='[COVID19.csv].[Latitude]' />
          <map key='[Lon]' value='[country.csv].[Lon]' />
          <map key='[Longitude]' value='[COVID19.csv].[Longitude]' />
          <map key='[Med.Age]' value='[country.csv].[Med.Age]' />
          <map key='[Name]' value='[country.csv].[Name]' />
          <map key='[Population]' value='[country.csv].[Population]' />
          <map key='[Province/State]' value='[COVID19.csv].[Province/State]' />
          <map key='[Province_Id]' value='[COVID19.csv].[Province_Id]' />
          <map key='[Recovered]' value='[COVID19.csv].[Recovered]' />
          <map key='[UrbanPop]' value='[country.csv].[UrbanPop]' />
          <map key='[WorldShare]' value='[country.csv].[WorldShare]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[country.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Days</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Days]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Days</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO_CountryID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ISO_CountryID]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>ISO_CountryID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO_CountryName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISO_CountryName]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>ISO_CountryName</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province_Id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province_Id]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Province_Id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province/State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province/State]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Province/State</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Update</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Last Update]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Last Update</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO_2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISO_2]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>ISO_2</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO_3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISO_3]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>ISO_3</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Country_Id]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>Country_Id</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO_2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISO_2 (country.csv)]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>ISO_2</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO_3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISO_3 (country.csv)]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>ISO_3</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lon]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>Lon</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID_worldometers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID_worldometers]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>ID_worldometers</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Density(P/Km2)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Density(P/Km2)]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>Density(P/Km2)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Land Area(Km2)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Land Area(Km2)]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>Land Area(Km2)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fert.Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fert.Rate]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>Fert.Rate</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Med.Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Med.Age]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>Med.Age</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UrbanPop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[UrbanPop]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>UrbanPop</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WorldShare</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WorldShare]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>WorldShare</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Infected' datatype='real' name='[Calculation_347621628396007428]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Confirmed])/AVG([Population])' />
      </column>
      <column caption='Death_Rate' datatype='real' name='[Calculation_355784403550769152]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Deaths]) / SUM([Confirmed])' />
      </column>
      <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Country_Id]' role='dimension' type='ordinal' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[ID_worldometers]' role='dimension' type='ordinal' />
      <column datatype='string' name='[ISO_2 (country.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[ISO_3 (country.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[ISO_CountryID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Province_Id]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Dados migrados' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[diff:sum:Confirmed:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Confirmed]' derivation='Sum' name='[diff:sum:Confirmed:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Confirmed]' derivation='Sum' name='[diff:sum:Confirmed:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Confirmed]' derivation='Sum' name='[diff:sum:Confirmed:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Deaths]' derivation='Sum' name='[diff:sum:Deaths:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
      <column-instance column='[Province/State]' derivation='None' name='[none:Province/State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[diff:sum:Confirmed:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[diff:sum:Confirmed:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[diff:sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[diff:sum:Confirmed:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[diff:sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[sum:Deaths:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Province/State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Ashland, NE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fresno County, CA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Placer County, CA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Clara County, CA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cherokee County, GA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Douglas County, OR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hendricks County, IN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Klamath County, OR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rockingham County, NH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clark County, WA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fayette County, KY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Humboldt County, CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Los Angeles, CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nassau County, NY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Benito, CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suffolk County, MA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virgin Islands, U.S.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Berkshire County, MA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis County, UT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Princess&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jefferson Parish, LA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marion County, OR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New York County, NY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Providence County, RI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sarasota, FL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tulsa County, OK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wayne County, PA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bennington County, VT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Contra Costa County, CA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fulton County, GA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jackson County, OR &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Manatee County, FL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Plymouth County, MA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Clara, CA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington County, OR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cobb County, GA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Diego County, CA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suffolk County, NY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Charlotte County, FL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Douglas County, CO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harrison County, KY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;King County, WA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sonoma County, CA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot; Norfolk County, MA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Paso County, CO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hillsborough, FL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lackland, TX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montgomery County, MD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Omaha, NE (From Diamond Princess)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rockland County, NY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spartanburg County, SC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carver County, MN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harford County, MD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middlesex County, MA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ramsey County, MN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shelby County, TN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Unassigned Location, VT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Collin County, TX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Floyd County, GA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madera County, CA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pierce County, WA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Francisco County, CA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Summit County, CO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Volusia County, FL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Boston, MA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Princess Cruise Ship&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Johnson County, IA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norfolk County, MA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Providence, RI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saratoga County, NY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ulster County, NY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broward County, FL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Delaware County, PA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grant County, WA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Johnson County, KS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seattle, WA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Umatilla, OR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Westchester County, NY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charleston County, SC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harris County, TX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kershaw County, SC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norwell County, MA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Recovered&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Snohomish County, WA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Unassigned Location, WA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wuhan Evacuee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chatham County, NC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Douglas County, NE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kittitas County, WA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Okaloosa County, FL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Riverside County, CA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Unknown Location, MA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yolo County, CA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bergen County, NJ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cook County, IL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jefferson County, KY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maricopa County, AZ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Polk County, GA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Cruz County, CA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Travis, CA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington, D.C.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Bend County, TX&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madison, WI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pinal County, AZ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Mateo, CA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tempe, AZ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wake County, NC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chicago, IL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fairfax County, VA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Honolulu County, HI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lackland, TX (From Diamond Princess)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montgomery County, PA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Orange County, CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento County, CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane County, WA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denver County, CO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Queens County, NY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shasta County, CA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Unassigned Location (From Diamond Princess)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Williamson County, TN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Berkeley, CA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Davidson County, TN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grafton County, NH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jefferson County, WA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marion County, IN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New York City, NY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portland, OR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Santa Rosa County, FL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Travis, CA (From Diamond Princess)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washoe County, NV&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alameda County, CA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clark County, NV&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fairfield County, CT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hudson County, NJ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lee County, FL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montgomery County, TX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Orange, CA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Antonio, TX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Louis County, MO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Virgin Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:ISO_CountryName:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Congo (the)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Korea (the Democratic People&apos;s Republic of)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palestine, State of&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;United States of America (the)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Netherlands (the)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates (the)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gambia (the)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lao People&apos;s Democratic Republic (the)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moldova (the Republic of)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Philippines (the)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holy See (the)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Korea (the Republic of)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cayman Islands (the)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Russian Federation (the)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania, United Republic of&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas (the)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central African Republic (the)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Congo (the Democratic Republic of the)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Faroe Islands (the)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Taiwan (Province of China)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominican Republic (the)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland (the)&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niger (the)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Dados migrados' id='Migrated Data'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[COVID19.csv].[ISO_2]' />
                    <expression op='[country.csv].[ISO_2]' />
                  </expression>
                </clause>
                <relation connection='textscan.0z85n0u13rk3rs13kbsvq04x8apk' name='COVID19.csv' table='[COVID19#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='integer' name='Days' ordinal='1' />
                    <column datatype='date' name='Date' ordinal='2' />
                    <column datatype='real' name='ISO_CountryID' ordinal='3' />
                    <column datatype='string' name='Country/Region' ordinal='4' />
                    <column datatype='string' name='ISO_CountryName' ordinal='5' />
                    <column datatype='string' name='Province_Id' ordinal='6' />
                    <column datatype='string' name='Province/State' ordinal='7' />
                    <column datatype='string' name='Last Update' ordinal='8' />
                    <column datatype='real' name='Confirmed' ordinal='9' />
                    <column datatype='real' name='Deaths' ordinal='10' />
                    <column datatype='real' name='Recovered' ordinal='11' />
                    <column datatype='string' name='ISO_2' ordinal='12' />
                    <column datatype='string' name='ISO_3' ordinal='13' />
                    <column datatype='string' name='Latitude' ordinal='14' />
                    <column datatype='string' name='Longitude' ordinal='15' />
                  </columns>
                </relation>
                <relation connection='textscan.09vn5k60o6h00j14i86k71brqlfc' name='country.csv' table='[country#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                    <column datatype='integer' name='ID' ordinal='0' />
                    <column datatype='integer' name='Country_Id' ordinal='1' />
                    <column datatype='string' name='Name' ordinal='2' />
                    <column datatype='string' name='ISO_2' ordinal='3' />
                    <column datatype='string' name='ISO_3' ordinal='4' />
                    <column datatype='real' name='Lat' ordinal='5' />
                    <column datatype='real' name='Lon' ordinal='6' />
                    <column datatype='integer' name='Population' ordinal='7' />
                    <column datatype='integer' name='ID_worldometers' ordinal='8' />
                    <column datatype='integer' name='Density(P/Km2)' ordinal='9' />
                    <column datatype='integer' name='Land Area(Km2)' ordinal='10' />
                    <column datatype='real' name='Fert.Rate' ordinal='11' />
                    <column datatype='integer' name='Med.Age' ordinal='12' />
                    <column datatype='real' name='UrbanPop' ordinal='13' />
                    <column datatype='real' name='WorldShare' ordinal='14' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='New Cases_2' />
      <command command='tsc:brush'>
        <param name='field-captions' value='ISO_CountryName' />
        <param name='target' value='New Cases_2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID19 - &lt;</run>
            <run>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Italy&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#f28e2b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</cols>
      </table>
      <simple-id uuid='{6CA6A9F8-5F8E-4D96-BF68-CC8EA418582E}' />
    </worksheet>
    <worksheet name='Death'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID19 - &lt;</run>
            <run>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;United States of America (the)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#f28e2b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0crql0r093apiw1ese62i1fv08de].[sum:Deaths:qk]</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</cols>
      </table>
      <simple-id uuid='{679341B6-6C57-4110-AF84-7FC8E3E2EBDD}' />
    </worksheet>
    <worksheet name='Infected'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID19 - &lt;</run>
            <run>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Canada&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#f28e2b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</cols>
        <mark-labels>
          <mark-label id='1'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</field>
                  <field>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</field>
                  <field>[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>20200419</value>
                <value>&quot;Canada&quot;</value>
                <value>35633.0</value>
              </tuple>
            </tuple-reference>
            <label-position x='-11' y='-29' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{800723A8-8602-40E3-A6D9-73EA38924FBA}' />
    </worksheet>
    <worksheet name='New Cases BRxCA (Confirmed)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID19 - &lt;</run>
            <run>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[diff:sum:Confirmed:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;United States of America (the)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#f28e2b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0crql0r093apiw1ese62i1fv08de].[diff:sum:Confirmed:qk]</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</cols>
      </table>
      <simple-id uuid='{CB1AE7C2-9681-4DB5-AA17-23A9BB234022}' />
    </worksheet>
    <worksheet name='New Cases_1 BRxCA (deaths)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID19 - &lt;</run>
            <run>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[diff:sum:Deaths:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Canada&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#f28e2b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0crql0r093apiw1ese62i1fv08de].[diff:sum:Deaths:qk]</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</cols>
      </table>
      <simple-id uuid='{3A014F45-E2D3-4106-B4E6-DFF2C046095E}' />
    </worksheet>
    <worksheet name='New Cases_2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID19 - &lt;</run>
            <run>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[diff:sum:Confirmed:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;United States of America (the)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#f28e2b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0crql0r093apiw1ese62i1fv08de].[diff:sum:Confirmed:qk]</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</cols>
      </table>
      <simple-id uuid='{8207EB59-0AFF-4C53-A81A-BAB758BC9918}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Province/State]' derivation='None' name='[none:Province/State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]'>
            <groupfilter function='member' level='[md:Date:ok]' member='20200424' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0crql0r093apiw1ese62i1fv08de].[Longitude (generated)]' field-type='quantitative' max='-6750041.7984571103' min='-15418291.005796313' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0crql0r093apiw1ese62i1fv08de].[Latitude (generated)]' field-type='quantitative' max='10527429.100000469' min='5525282.8491973039' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]' />
              <lod column='[federated.0crql0r093apiw1ese62i1fv08de].[none:Province/State:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0crql0r093apiw1ese62i1fv08de].[Latitude (generated)]</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{14195BAB-46C0-4D41-AB61-CFD75FEB7D8B}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column caption='Infected' datatype='real' name='[Calculation_347621628396007428]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Confirmed])/AVG([Population])' />
            </column>
            <column caption='Death_Rate' datatype='real' name='[Calculation_355784403550769152]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Deaths]) / SUM([Confirmed])' />
            </column>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Population]' derivation='Avg' name='[avg:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_347621628396007428]' derivation='User' name='[usr:Calculation_347621628396007428:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_355784403550769152]' derivation='User' name='[usr:Calculation_355784403550769152:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0crql0r093apiw1ese62i1fv08de].[sum:Deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0crql0r093apiw1ese62i1fv08de].[avg:Population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0crql0r093apiw1ese62i1fv08de].[usr:Calculation_347621628396007428:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0crql0r093apiw1ese62i1fv08de].[usr:Calculation_355784403550769152:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0crql0r093apiw1ese62i1fv08de].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]&quot;</bucket>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[sum:Deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[avg:Population:qk]&quot;</bucket>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[usr:Calculation_347621628396007428:qk]&quot;</bucket>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[usr:Calculation_355784403550769152:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]'>
            <groupfilter function='member' level='[md:Date:ok]' member='20200504' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Armenia&quot;' />
              <groupfilter from='&quot;Australia&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Central African Republic (the)&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Chad&quot;' />
              <groupfilter from='&quot;Chile&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Cuba&quot;' />
              <groupfilter from='&quot;Cyprus&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Ethiopia&quot;' />
              <groupfilter from='&quot;Fiji&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;France&quot;' />
              <groupfilter from='&quot;Gabon&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter from='&quot;Guinea&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Honduras&quot;' />
              <groupfilter from='&quot;Hungary&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Japan&quot;' />
              <groupfilter from='&quot;Jordan&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Kenya&quot;' />
              <groupfilter from='&quot;Korea (the Republic of)&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Luxembourg&quot;' />
              <groupfilter from='&quot;Madagascar&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter from='&quot;Mexico&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Mozambique&quot;' />
              <groupfilter from='&quot;Nepal&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Pakistan&quot;' />
              <groupfilter from='&quot;Panama&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Republic of North Macedonia&quot;' />
              <groupfilter from='&quot;Romania&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Saint Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Saint Lucia&quot;' />
              <groupfilter from='&quot;Saint Vincent and the Grenadines&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</column>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[:Measure Names]</column>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0crql0r093apiw1ese62i1fv08de].[usr:Calculation_347621628396007428:qk]' value='p0.0000%' />
            <format attr='text-format' field='[federated.0crql0r093apiw1ese62i1fv08de].[usr:Calculation_355784403550769152:qk]' value='p0.0000%' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0crql0r093apiw1ese62i1fv08de].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok] / [federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk])</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{9492B694-D63C-4AC8-919E-F7A3D40C0582}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]'>
            <groupfilter function='member' level='[md:Date:ok]' member='20200424' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Armenia&quot;' />
              <groupfilter from='&quot;Australia&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Central African Republic (the)&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Chad&quot;' />
              <groupfilter from='&quot;Chile&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Cuba&quot;' />
              <groupfilter from='&quot;Cyprus&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Ethiopia&quot;' />
              <groupfilter from='&quot;Fiji&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;France&quot;' />
              <groupfilter from='&quot;Gabon&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter from='&quot;Guinea&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Honduras&quot;' />
              <groupfilter from='&quot;Hungary&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Japan&quot;' />
              <groupfilter from='&quot;Jordan&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Kenya&quot;' />
              <groupfilter from='&quot;Korea (the Republic of)&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Luxembourg&quot;' />
              <groupfilter from='&quot;Madagascar&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter from='&quot;Mexico&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Mozambique&quot;' />
              <groupfilter from='&quot;Nepal&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Pakistan&quot;' />
              <groupfilter from='&quot;Panama&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Republic of North Macedonia&quot;' />
              <groupfilter from='&quot;Romania&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Saint Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Saint Lucia&quot;' />
              <groupfilter from='&quot;Saint Vincent and the Grenadines&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0crql0r093apiw1ese62i1fv08de].[sum:Deaths:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</column>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[sum:Deaths:qk]</cols>
      </table>
      <simple-id uuid='{612BCD5D-8DAA-4E1A-9B28-665D42914777}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[diff:sum:Confirmed:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Canada&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]' value='336' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0crql0r093apiw1ese62i1fv08de].[diff:sum:Confirmed:qk:1]' />
              <text column='[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]' />
              <text column='[federated.0crql0r093apiw1ese62i1fv08de].[sum:Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok] / [federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk])</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</cols>
      </table>
      <simple-id uuid='{6AFC9187-26FA-428F-B421-A45F20B97225}' />
    </worksheet>
    <worksheet name='US'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID19 - &lt;</run>
            <run>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
            <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;United States of America (the)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#f28e2b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</cols>
      </table>
      <simple-id uuid='{6CBEFA84-6D0B-45A5-9CC4-575872AEBFA8}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Infected'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{B214C490-7E48-445E-8DF9-D113CCCB2570}' />
    </window>
    <window class='worksheet' name='Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{E5856C9B-71B3-4D41-9170-73A59D88AC94}' />
    </window>
    <window class='worksheet' name='Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0crql0r093apiw1ese62i1fv08de].[none:Province/State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC5AC396-BEAB-4FC5-83EE-CF597A425F7C}' />
    </window>
    <window class='worksheet' name='US'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0crql0r093apiw1ese62i1fv08de].[none:Province/State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2540DF84-ED4E-4970-B3DF-05B4B0A9124C}' />
    </window>
    <window class='worksheet' maximized='true' name='New Cases BRxCA (Confirmed)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{87D599D3-94C6-49ED-99AE-419D07B3FDC0}' />
    </window>
    <window class='worksheet' name='New Cases_1 BRxCA (deaths)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5BD8897-C5FB-49C0-B975-AE3A7F755490}' />
    </window>
    <window class='worksheet' name='New Cases_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AD6986A-99D9-4BB0-914B-C74562B924DB}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0crql0r093apiw1ese62i1fv08de].[:Measure Names]</field>
            <field>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</field>
            <field>[federated.0crql0r093apiw1ese62i1fv08de].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79CC5169-2FE9-405E-844D-DE70FC0DBEBE}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{071E8569-7643-4358-A8BC-624BB7AE03BC}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F7A60E18-374F-4D61-A083-D515F32554D2}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{F9727411-7129-4ADC-AAC3-AFA7A8F3DAB2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Country' width='192'>
      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
      hUABArzV+P8B+IIhrZJycloAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Death' width='192'>
      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
      WNUrEwY+tu3gB6+eTF1eKiHwXAdnKIeN7wddHEfL6nkutuMO0DfAcWw8v3vucZTD91xse0Cd
      iVd1dlJZX9XZyfq6zin1PVJnXb3wQZ057okcIgxw7G59ezmG6ntCGzmUOaaNvNUh0EGh1p88
      oBzoJCIy5WqDn330CfHIkcee1+SLzx+SmZwkcJoE0Snev77QRZNbfcRGXZCJaZSLJW58/Cuy
      xpEbGTp89flXxMcm24cvE+fTu92rSKu7qzzdrTOWilErF1m49TGz6SPBr9Dju/v3IJZBFR41
      W+KTD2+jyq96SrOyxzfPtxnLpmnVK2QWbnBlJnNE35CXj+7TIEpMkyjXLD746EOi2quy+naN
      r75+TGZyHN9sIKfnuH1ltqusuyvfsGvKpKIa5VKFWx//grR+VF+bL/74NcmJSfBMLDnNx7e7
      V7yWt57zvGAzltCpFotcef8XTCaOuC1Dl4dffY2aGkMJXWquxqcf3EA+8mRoFrf5bjXHWCZJ
      s1pm4sodliaPuBxFwPNv7mOpcQxFUGl6fPTh++jqKw6nWeL+tytkx8dwmjX0iUvcWJrqKuvm
      0wcUXI2koVIu17jz8c9JHmkjIjD5/B/vkZmaInRbuJFxPryx1MVRWH/CasUnG49QKRb55Z/8
      +iI8AUI29yvcun2L5eUbjEcscvVud2HQ3MPS57h5Y5lbt2+R217rY3m5vsetu3dYXr7Be+Ow
      mu/xlthFykGGWzeWuXXnDpX9zT6Ora0dLl2/yfLyMrfn46zu1roFvCa5psytm8vcvHUbr5nH
      8bonV+X8LqmZa22OqzNs7uR61PXZLjQ7+t4kKTUoN7u9JU5tlyCxwM3lZW7dfI+97f6yrm3l
      uXWnre9SymeraHcLmHmq0kRH37sUd/vrbHV9h+u3brO8fINbcxFW9no8am6dvG1w+0Zb31Z5
      t28+mtvbYWLxOsvLy9y6PM76bk/OcuCwU3G4desmN27cJOJXqFvdPXSrsouSucSN5WVuLV9m
      Z6f/kI+NnSK37rTLOh1z2Kv0eNRa+zS02XYbuXOX/NbLPo4Xqzvc+tndtr7T7aZ/IZ4Arcoe
      3z7fxtBVlNgYt65f6upVhQhZfXSfiitD4LNw/S4zme7giGeW+frBM4yYTqjE+dmdZbQjHAjB
      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
    </thumbnail>
    <thumbnail height='192' name='Infected' width='192'>
      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
      T+xKLAjSUgIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='New Cases BRxCA (Confirmed)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New Cases_1 BRxCA (deaths)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WXAdV5rn98u8+75g37gTJEiqJJGqrbt6pjtiwh67O3qm7fZ0uD22H+yw
      /eCY8KMf+93v3sYRtuehPe7o8HRXdUmlKq0liRIpLiABEARI7MDFdvct9zx+AEji3kxcAIRE
      QqX8v4hCnvvP82WeL8853/8750hCCIEHD99TyK+7Ah48vE54DuDhew3PATx8r+E5gIfvNTwH
      8PC9hv91V8CDh28TU7/63/mHxTgxq8E/+8t/yUgmAoAtBLNbmucAHn63ISHxh3/6l4xs/5ov
      JxfI6U+YWVd48+p5/u6rBW8I5OH7Acuy8Ms6T2dXKS3OUAqf5vf+6D/wHMDD7zYC0QRfvfvX
      /HqywR+8dQpNt8j29BIJyEz+9h+QPCXYw/cZXg/g4XuN1+oApmli23bHMtb2TMfrtlLCrm8e
      i0NYBlZh/lgchyljFRcQpnYsDru+hd0sHotD6E3s8vKxOA5TxsrPIsQx3281h1Crx+IQahW7
      mnO95vUAHr7XOL4DCIu1+Uds1QxAY/zm53zy2ZdUFIv1uUluP5jFErC9PMOXd6cwOn8QPHh4
      pTi2DqA1qkh+g0LRoEcuY3dd4A8v9WPVczyqRzmbVJhfmGOrYHOpP8DT5U3GzvQdml9ODna8
      LgVjICLH4kD2Icd7j8dxiDJyvBfkzo/8QHvDSQ76bh1YV38QKdp9PI5DlJETA4B0LA4pkjn2
      MyMQQfIFXC8d2wFC8Qz9VKgUwLJge2mST/PLXBnO0j3QSyqgU156RLL/TVJpk42tBrZtY1nW
      8/9K0v4Pya4VkKXQvteF3gDbRArv3ygO4sC2EM0SkhR8eY7D1LVeQopmO77QAznUOsgyUjD+
      8nW1dIRaRerw+r8Je+16ETkehOO8X6UK/jBSYP+P3IEchgKmihTxOa59o0qwIUX4ye//jGpu
      ipJqUyjnSSQVfMkhChs5Kvjw+VLIsowsy5im+fzf+8ESGr5gh4ZpNQAbuUOZgziEZWALo2OZ
      gzgOU8bCQPb7kPwvfx9bt0GWj2evbiIk81gchyljCQ05GECSjvF+VQvJJyEdx15bRViWq73H
      ngM0S+t8/vU86wt3qRoSS4/usamlOT86ypl4k5VakHNnzzPaJ/M0b3Hh1OGHPx48fNs4dg8Q
      zQzwj/5o4Pn/92V/7/m/B85f49mVnlOX6Dl1dH4plOh83ReADl+Yw3AgSTtzieNwHKKMFIwd
      u66SPwSSsys/CgeyDwLR43EcoowUPD4H/jDsM34/NIfPD/sMoU58MtzBxgVB7hxaOtgB5O+M
      A+APcVDHfRgHkF6FA4TiHDQJPpAjEDlwEnywvQEkv3s9TrwOsJ+A8QxCbyDUyrE4sC3s+tbx
      OA5Rxq5vgW0ei0OoVYRePxYHpo5o5o/HcYgydm0d6Jxpc6C9SgkM5VgcGMoOjwtOvAN48PBt
      wnMAD99rnPg5gCeEtcITwo7O0UkIO/E9gNBqnQtYOhyQYHYgh7B3BLXjcByijNAbcEBy2IH3
      MbUdm4/DYVsIo3k8jkOUEVqdg+YAB3IYyoHzpoPtNRCm6nrpO+8AwtrfuMNyIMR3xgGEqSG+
      AQfgVTiAfnwOTBUs43gclrnvRPrEO4AHD98mTvwcwBPC2q57QtjROTwhzBPCWuAJYS8udf7l
      64cnhLXCE8KOzuEJYR487APPATx8r3Hi5wCeENYKTwg7OocnhHlCWCs8Iew5vvMO4AlhR+fw
      hLAXOPEO4MHDt4kTPwfwhLC2654QdnQOTwjzhLAWeELYi0udf/n64QlhrfCEsKNzeEKYBw/7
      wHMAD99rnPg5gCeEtcITwo7O4QlhnhDWCk8Ie47vvAN4QtjROTwh7AVOvAN48PBt4sTPATwh
      rO26J4QdncMTwjwhrAWeEPbiUudfvn54QlgrPCHs6ByeEObBwz7wHMDD9xqHmgMI20ZgoxuC
      cKjzhOSbhieEtcITwo7OcUwhTDB187fcvPkJ/+u//n/pHD3+5uEJYW3whLAjcxxbCCtvLPDJ
      3TkG4wE6S07fPDwhrO26J4QdnaODEHaoIdDv/Uf/Be8YFkqzQbqd21BZfDJFuP8NBlMwNX6X
      pj/L9TcusPRonI2mnxvXr7H1dIKlksX1G28RC3aOY3vw8KpwKAd49Nl73FoqEpTS/Nl//qfs
      PaDTtiwy2QibNZN4M4ev9wKD6hqriwsUfb1cGlBZWZiloCV544zEcm6LsTMD+96rHZ4Q1nbd
      E8KOzvHyQphAUzUaTYM//JM/ZzAi034aayAcIx2PsqmBakhku2IEo2k25kqkz/QSC0TIFx4R
      63qTWNzEah7tnGAhhZD0Dl2+BUJIHcscyCFshBQ8HschyggCSKYF1v7j4gM5bHnn2N3j1NW2
      Efi/fXulIJJh0GkifCCH8CFZNohj1NUSCNvnWuYAB9C49cGvWCxUmf/1zzG1EP/8v/wz9vqb
      qSsU8yXKZR8DvTKPF5aI6kV6zpxjbn4BK6oT7j5PYfkJCxUfofSpo50TXMnjS3Tte91WGmDr
      yMHkS3MIy8Cul/DFMy/NcZgyVn0NORztfE7wQfbqZZD9yB0Oyj7QXr2JUKvIsfYB7eE5DlPG
      qhaQ45nO5wQfZK+aR/LFO/bQB9qrqgirjhxztpEDJsFhbvzs94lbEmPvvENCaLT7kGWoFBoB
      EoE6UnqQs9kQqeHL9PcOcPVsFn9qmFNDQ7wxOgixHs4NdX6oHjy8Shw4B2hW8qyu55Dm5she
      uUb7NzIUyzB29cVfU9Fzz/+d6Rt5Xj7ZPUiyc+jZg4dXjgPDoD2nL/Of/md/jLpdZH1xmc5Z
      Gd88DiOESeHUsTi+a0KY1GH4cxiO75wQts8E9rAcBCI7PG6/7fzLHUzdvkvDjBAPWHSOYn/z
      8ISwNnhC2JE5ji2EXXjrOpdGgiwVNF5tIoQnhDmue0LY0TmOuyKsnHvMb++VGE7JjkmwBw/f
      ZRxKCFOaFj67wsqmdsCI7puHJ4S1XfeEsKNzHG9FmMRbf/THhAeeEOk5xcEmfbPwVoS1wVsR
      dmSOY6wIEyyM/5b/7f/4v/jkiy+ZWVw/YErzzcNbEdYKb0XY0Tk6rQg7oAdo8Pmddf7b//5f
      EcDk7//Pf0vpZz8g2/lHHjx8Z3CAA+iUVp7yr/+X/xmAzaclfvQKKuXBw6uCJITo0EcJHFcl
      6RubCB8mF0hotY5jPGHpIGwkf/jlOYQNenN3zPpyHIe6j94AfxhJ3n8SeyCHqQJyx3yiAzls
      E0wdKbj/POAbsVerQTDeOdnxIA5DAdm/74quQ3FYBtjmznyiDQfMASQkCYq5p3z00Ud89NGt
      E7cgxhPCXoLDE8Ke41A6wPRX9+g6d5HR0dOeEHaMMp4Q9hL3OQlCWCis8un7H/Lhh1+98lwg
      Dx6+TRycDVqucvkf/xlnVR3w0Tl6/M3DE8LarntC2NE5jiOEldc32FQ2mX2yjiSl+A//xT+l
      cy7iNwtPCGuDJ4QdmeNYWyMOjl3i7ev/iL/4i7/gX7zixg+eENYOTwg7OscxhDAAwdrjL/nw
      fp1zIzF++LPfd6wL9uDhu4pDTYLzq0tMP/iaT29PvfL1AB48fJs4VDbo+Xf+Pf7VVR2Bn/3l
      Fw8evns4VA9w94PfIDJ9TH30Ee4jqW8Ph4kCdVKBD8PxXYsCSb7OnyEvCtSG4x6QcfntUd77
      639DtP/8K0+E86JAbfCiQEfmOPYBGdViCUsSNLfydNZLv3l4UaBWeFGgo3McMwoElXydf/Ln
      f8lASH7lqRAePHybOFQPEEkG+fjv/pa//dv3X3kP4MHDt4lDOYAwaqxtQCygv/IwqLcvUCu8
      fYGOznHsfYFeLIovv/JF8V46dBu8dOgjc3RKhz7xi+IPkw6NpSOxfy9wktKhD+qtDpMOjezv
      +CE6SenQEn3Hu4+p7vSaHXqBQ6dDu/QChzoiafLm58ROX+bsQPaVL4r34OHbxKGGQMGQ4Bd/
      /W/467/+5SufBHtCWNt1Twg7OsdxhbBwREby99PXE3rl56p6QlgbPCHsyBzHFsK2Vkv4hMLm
      6hadp5vfPDwhrBWeEHZ0jmMIYSaVssr5t65T8j0hNXzZcT6ABw/fZRx4RNLf/z//FkNtcu5n
      PyVoqGjgrQfw8DuDA4ZAEf7Zf/InZDLJQ479Lcr5PFv5AoYlUOoViuUaQoDWrFEoVbCPGEby
      hLBWeELY0TmOIYQ1+fV7nyFsmVQmQzab6vwDrcid8Rm2twvoSok796aYnRpnbTvP3TvjPJ2e
      YGmr83i9HZ4Q1gZPCDsyxzGEsBh/8Adv8O7f/4rFuTmiUoyB86f2TYgz6zVKjSoZsw8aFXpH
      rzIS1Flafkzs9DXGMiazWxXsnsShj0m1awXk8P5fK6E0wDKQ5P2/EgdxYBnYjRJyaP8ZzoEc
      hyhj10vIvij49m8UB9tbB8mHJO0fCj2Qw1ARjTJyYP+TNb8Ze4s7z7RD5OtAjmYVKSSQxP47
      YRxor9ZE6A1knzPSd4ADSNQ3alx4+yKTk3NIUoafdCqdHOaf//Fp1hcesLIVRIlG0VHxhxLU
      Gw30qITP50eSJPx+P5ZlIctyZwcIBpEDHbbFs4JggdShzEEc+CTsQOcyB3Icoszz6x3i2gfa
      GwjsKMHHqquJCAaPyXEYewPIwSCdhkEH2vusnsepqx1ECN3V3gN1gPM/fof0xiqnz91gaLCv
      4w9Mrc798Qk0OcL161dZfHiH8XU/N354HWvqDren4fo77zgafCcHkEKJjtfZ3RfoOBxiVwg7
      Vj0OUeaZDnCs++zuC3Qse3eFsG/f3p34/LHquiuEHYtjVwhzK3Pg5rif/H//NytWipRPY60Z
      57/7l3/ibY77svfxNsc9Osfr3Ry3zHqtm//4j/99/sk//VMuWjU2O//gG4cnhLXCE8KOznEM
      IcxPwNjkb/7mbwBoluF65x948PCdwgEOkODP/+v/6tXUxIOH14BDJcO9ThxGCEMcUyj5jglh
      B41cf+eEsGM+MwKRfecQrzq588jwhLA2eELYkTmOfUDG64R3QEbbde+AjKNzHPeADA8efldx
      4ucA3gEZbde9AzKOznHcFWGvE96KsDZ4K8KOzHHsFWGvE54Q1gpPCDs6Rych7MQ7gAcP3yY8
      B/DwvcaJnwN4QlgrPCHs6ByeEOYJYa3whLDn+M47gCeEHZ3DE8Je4MQ7gAcP3yZO/BzAE8La
      rntC2NE5PCHME8Ja4AlhLy51/uXrhyeEtcITwo7O4QlhHjzsA88BPHyvceLnAJ4Q1gpPCDs6
      hyeEeUJYKzwh7Dm+8w7gCWFH5/CEsBc48Q7gwcO3iRM/B/CEsLbrnhB2dA5PCPOEsBZ4QtiL
      S51/+frhCWGt8ISwo3N4QpgHD/vAcwAP32uc+DmAJ4S1whPCjs7hCWGeENYKTwh7ju+8A3hC
      2NE5PCHsBU68A3jw8G3ilTlANZ9jdn4F84jnBB9GCOt0PNJhOL5rQpjk2/94pMNweELYnt92
      PiPsG4JR5YuvZ+lJykjp01wc7gJe7owwXVNo1ssvCuyeEcYxzghD2Aij2fEA6m/qjDApEOno
      BAfex9QACY5xRhi2hTC1V3JGmBSMwzHOCGP3jLBOTnAgx+4ZYW5O8EqiQKJRJDlykbNpk5mt
      BradeX5OsCzLKIrCMz8MBoPYto1p7k58ivME+69iGAZCCP6nX/6PPG2svIpqe/ge4JU4gBSK
      0lgq0PBL+Hzh51/9Z408EnF6ZjC484WzGmF8fj9+/05V/5t//D9Q2aP8CqWMsPSOYUwrP4Ov
      +9K+14VtIMoryNlzL81xmDJ2aQEpOdRxCHMgR2MbSfYhRbIvzSEMBdHMI6dGXprjMGWs/BN8
      XRc69gAH2ltbRwrGO37hD7RXq+4clJ0YcFx7NTpApJvBUI6JZcGNt39wLKqB3nPsNcNWSmDp
      yPG+fX9jRaL4ejo8IMvATnTj6+rgAAdwHKaMFU8jJwd3EtpeksOub4HsR452cICD7NWbOw6Q
      PvXSHIcpY0VjyF0XkDoM+Q60t9q34wDh/U+1P9De3fQRN73g1cwB9oF3TvBLcHjnBB+d4+XP
      CX798ISwNnhC2JE5PCHME8Ja4Qlhz/Hac4GEENj2/o1C2PaB17GPx4FtI8TB9+nIcZi6Chsh
      xE6dX5pDwDHrulMHAd+2vfaOraJDOtBh3q8QAulY9tqwTzt77XMAoGWM+Cw0+gyWZeHz+fa9
      /syo9r8dxCFJ0vP7PnPCTvdp53j22PbW/aC6WpaFLMst9xVC/E7b287xMvburfth7d173e2+
      z8q89h6gfRK81xDA8aLar0uShBCiY5mDOJ693KNwuOEw9/H5fB0nhQdxwI7Nx3lmz5zo27b3
      WSM7Cfbu10Ze6xyg5eEIgaFraJrO3k6p1bMtNFXFMK3nf2v5OgiBaeiomoa9D4ewbTRNRTda
      J1bPH7AQWKaBqmrY9j4cwkbf5di3rtYOh2W96HZbol1CoOsamm504DBRVRWzjaP1memomt7B
      XgtNcz6zvfaahr5j734c4sUz26+uz56ZtWeY0dIQhUDXjm5v+/s9qI2II7QReM1DoOcQJtPj
      9zBDSYKSRblpc/2tawR8L74cSmWLB9OLZLJp1FqZWP95Lgx17eEQLEzfp2yFiQVliuU6b1y/
      Tiywp6vUa3x9+yHpnh4stY4d6+ONC0MtVdmYm2S5BulogGK+yOXrPyYd3tNwbZU7X90l1tUD
      hkJDivPO1fMtHKW1OWY2amQTUSqFPCNXb9Cf3BP7tw0m7t1FimXwC4OKJvPOm2P45Bf2Noo5
      Jp7kyGaSNColMqcuc6Yvtcdem6eT96lLUSJ+KNVU3nz7LSJ71r4aSpm796fJdHehN6v408OM
      nelvqeva7EPWFR/JiJ9iocSV6z8iGdpjr6Vw68u7JHt6QW+i+NNcHzvTwlFYnuFJXiMbD1HK
      5zn/5o/pju0ZXNg641/fJZjqQrY0KmaAH/3gUkvPUNteZmphm2w6Qa1cpPfcNUa694SlhcXM
      g3togTgh2abUMHn77R8Q2tNGtFqe+5NzZLoyaPUK4Z4zjI707OEQLD0ep2AEiYd8KFLshESB
      jCbrVcHY5UtcujwGSp6mbrUUqeRzRHrOcml0lLELQ6yubbRyCIuVjQpjV8YYHb1EJtBku9oa
      LTFr66iRYS5fGmXsyiU2VxcdVZlf2uDKtauMjl7iXNZmYbsteqDkKYoMY5dGGbt6leL6koNj
      eXmNs6NjjI6OMjYUZS7XtmbZqLHZDDB2eZTLY2NolQ10q/U7VNjMkR48v8NxrpeltbY1y7bO
      ar7J2JXLXLp0mZioUm60RkvUcg6ROLXzzC6dJ7fqTCFZWNli7NoVRkcvMZwwWS22RdSUTSpy
      7469166RX5t3PrOFNS5d3XlmV/oDPFlvW7Osl9nSI4xdusjlK1eo5ddo/+xu5HL0nh5ldHSU
      K6czLOYKrQVMlVzZYGzsMpcujxHQS9SV1l68VswRyJ7ZsffiKdbWnGuFl3MFxq5e4eLFUTZX
      5k5KDyAo5uaYXSsT9EGse5iLp/qQ93whhKUz9WAcXQpg23D+8hUysVALR72YY/LJGqGQn0Cs
      i7ELp1q+qkLYzE3dp6zLYFmMjF6lL9UqjhiNAncfzBKOhBD+ONeuXiSwhwMhWH0yQa5qIQuT
      3tOjnOpNtXDYep279yYIhMOYBLl69TKRQOtwYHtllrnNOkFZkOw9xfnhntaJnqkyMf4A2xfE
      EjIXx8ZIRYItHNXtFR4tbBIKyISSvVw6P4xv7zOzTWYnx6mbPoRtc3r0Kj3JVsFQrW4xPjVP
      OByEUIprl8/hb7N36fE4m02QbYOBc1cY6moVDG2tytd3pwhFw5hSmDeuXSLkax3ubS5Os1hQ
      8WOTGTzL2YFsq71Gk/H7E0jBIJbwcWlsjEQ40MJR2lhgZqVIyC8RyQwwemagrY0YTE+Mowg/
      whacu3SVbLy1jTTLGzycWSYcDtB3+vIJ6QFsnYXVbSLhEOevvI2ob1JXW727XlynbsqEEt3c
      uHqOJ/PLbSSCpcVlwtEIQ+eu0B1ssFZs/XpbSpH1kk44luKtt99kaW7GUZXluXlCiQTdQ+cZ
      65OYXq22FjDrLG7WiUajXH3rBhvLTxwcG0sLyJEYia5hbpxNMrHQtgODrbKwViQWCXPx6ts0
      i2toRmuIrrK1hoafcLKXG2PDzMyvtZlrsbi0RjgS4tToG8SpsF1pFQS1ep583SIUy3D9zSss
      zD912ju/QCgeo/fUKOfSJk832r7eRpWl7SbRaJw33n6HtYXHDo7V+TkCiQSp3tPcOB3mwULb
      DgyWwnyuTCwS5tIbb1NcX3T0AMX1FSx/kGiqnxujfUwvtPfwBosrm0TCQc6OvYlfyzt6vGZ5
      k4oKoVgXN964yNP5BUddlxYWCUejDJy+xMr89AlxAEujZgS5MnaepZlHVOoNzLYhQaNSItF3
      jv6wytzqFvVm29BE2BRqBleujrI1/5hKo4lmtjYqq1lASp3idDbAk8Uc9YZTDNrI1xm7epnm
      5iKlWo2G1joUQyujBXs4P5xlbm6Rat25RclWvsKZi5cIKFtsFkrU1TYhx1Bo2FEuXzjFwuwM
      5Xodu61BVMtlskMX6fLXWcrlqSttQxNhUmoKrl69RO7JIyqNBrrVaq9eLxLMnmEkBU+WNqg3
      nGLQVrHJlSuXqaw+pVxvoLQNPVGLGJFBzvYneDq/Qq3uFAzXt6qMXr4MlTXypbLj44VRR5FT
      jJ4dZOHJU8o15zMrlir0nx4lKcqsbhSoK23qvqVT0XxcvTLK0uMp1zai1IpEe88yFDd4suzS
      RoB8RePK1UvkF2ao1xv4/uqv/uqvHKVeNeQg0aCNHIiRTUUoVBSGBvrx7+lGo/Ekhq6S7urF
      VspI4Qy92b35HxLpRBBNhOntSbO1VWRgYJBIcE/oK5zGZ9ZJZHsIWXUUKcZgT6alKr2ZCGXV
      T19fF1sbW/T2D5KI7OmKA0mCokk8lSHuN6jqfob7e1o4ujNRKgr09HRTLuRJZfvIJPYMPXxh
      In6TQDhBOu6nVDcYGuxrGa4lEgk03SDT1YNeLxKIddGT3jP0kHwkoz5MKUxPV5LtfIXBgQFC
      e4ZagUgKjCbJrh78ehUjkKC/O91S165UmJoRoL8/y+b6Nn39g8TDeyawwTRBu0Yi3UVUUqlZ
      YYb6ulo4+rqilJoyvb1ZCtt5sj0DpGN7hmv+KEFJIxJPkYxIlJs2I4O9LUOgVCpGU7XIdnfT
      rBaJJLvpTu3JVZIDxEMSti9KdyZGvtRgaLCfgP9FGwnHkli6SirbA2oZgmn6ulqT6LLJEIoV
      orcvS0WVXr8OsAOLwkaOzVKdoGRhCRmfr7Vz0pQ6q0uLNGpp1FqFWL9zV4Pi1gZlq0wsKNPU
      BcFQq3m2qbC6uES90cRS6wRjzgzSciHPci1PNRqgVDfoi7ZlbgqNjZVlak0FDAVfwJlAV6tU
      WNmo0UhEqZSajAy2JeoJk+3cKvlKA78wEJK/ZSwLoDZrrCzmaGSSNCo1Mqdao1UgKG5uUJeq
      RPygWRKBYKu9ltHceWaNGnqzSig97LQ3v826UiQZ8VNVTIYjbUl2tsra0jK1pgp6E38g7eCo
      lkos5zeox0OUygrnT7fba7C9tkqlriBbGrLfmdim1KusLG7TSCeolev0nmtPbrQpbOTQClVC
      so1hS/j8rfF+Q23s2Ft/FgXK0I7i1iYFo0Q85CMY9KJAjqp4USAvCvTq4UWBvCiQFwXyokB7
      4UWBvChQSxEvCuRFgY4SBXr63YsCCYKxDH3ZGNvFhmsUyDQNegeGEEoREUq7RoEsX4KhwS42
      ctv0u0WBrCbdfUOE7RoNEXWNAtXMCCPDvWzkNujpc4kCoZDt7icVNCmpsmsUqKb7GRrqp5zf
      JpnpdY0CRZPddKeC5CuaaxRIN236BoYwanl80axLFMgPwSSDfRk2NksM9DujQJKl0t0/hN+o
      oPnirlEghSgjw32sr63T6xYFEg26egeI+xQqRtA1ClTRggwP97G9sUmmp98lCqSTyvaQickU
      axbDLlEgRYeBwUGa5TyhRJdrFMgXSdPfnWCrUGNwwBkFsk2Dnv4hJLWEFUi6RIHC6FKckeFe
      Cg37hMwBPHh4TTgZQ6A2aKqC1T4m2AvbQlG1jovtTF1FNzss6BBiZzuWDhy2qaEaVocSHMiB
      paNonZf0qarSkonpUhEUVe94H0NTMaxO9tooitqRwzI0x1ykHYeyt30Y5cbRyV7LQNGMjvfR
      NRXzOG1k9/2fKAdQGjV000ar5ZmeW3UWsAyqtQZC2KzOPyFfcY7hNaWBopsYSpXp2YWW1FoA
      bItarY4lBNtrC6xtOw/XMDWFhqIjTI3H07NOJxCCRr2GadlUt1eYW3UeNmEbGrWGihAWTx5P
      O+cBQLO+Y69a3uTx/Lq7vfUmQtgsPZ2hVHcu/VSbdVTDQm+WmH6y1JLCvVMRk2qtji0EGytz
      rBecywcNtUlTNbD1Jo9nnqCb7fba1Gs1TFtQ2lhicb3orKquUm+qCNtkZnqahovTN+tVDMtG
      KeWYWXI5kMTSqezaOz8zTbXpXPqpNGpopoVWK/DoSXsg5Jm9DWwEa4tP2Co75yz6bhsp5BZO
      ihC2A7VRZWNpCZMAp86cdRYQFsX8OovVBtF0D9mEc5W/rjTIbS6gWT6GRk47BDWETbW0zcJC
      jVAsxdmMczcBU1fIrW2gGILewZGWcfUuCfVKgYWFReRglLPnnIKLsHQ21tZQVINU7yCxsJv4
      U2ZzaRFbCnL6XLvQBQiT/OYai3WFWKaXdMy5nYqu1FlfWkSz/QyfOo0kS20cNpXiFovzNcKJ
      LMNp5xaQhq6wmltANST6hk4RaBOYEIJapcDC4gKBUJwzw04xzDY11ldyKJpJV/8I0ZCzaTVr
      ZbYWl7DlEGfPdzmuY5tsr6+y1FSJd/WTjDifmdassbG0hCECnDpzxoXDolTYYMe+XOoAABpg
      SURBVHG+TiTVTVfSufOFoTVZW19ABOInqwfwyzb1hors83P3ztfOArIfQ2mgmxZyY517T51f
      Eb8PGk0VgczM1H1nFEeWsXQFXdPxWQ3uTs05b+OTaSoKpiXYXpwkV27fdULa6aZVFZ9P4s7d
      Bw4OyedHazYwTBt9a4bpdeeXyCfZNJoaciDIna/d7dWbdQzTQq4tc689vAj4ZUGtoYIkMzF+
      F6N92CfJmGoT3TDx6WXuPnZ+NX2yRLOpYtmw+vQh+VpbbyVJCFNDVTVkyeLOgykXe32ozSaG
      KaivTzO35YzASMKkoWj4giG+vn3baa/Pj96sYZg2cukp95ed0aKAb8deyefbp434MJRde5Ut
      7s06xTCfDA1FQxYaiBOEqYkJYdq2sIUQtm07C9Q3xcP5jZ1rtu1aZmH2kaiqxnMORxm1Kh7O
      LHbk2F5+ItZKyvPfO8qYupiYmhbWfteFEOr2gpjJVffnEEJMHmRvNSceLuQ71nX20ZRQDGt/
      e5tF8fDJSkeO3MKM2Kqq+9fVUMTE9GxHe2sb82Jus348e8vL4uFSqWNdpyYmhNGJo7EtHs7l
      OnIsPZ0WpYYuhG2LkxEG3UVtbYaJlSrCskgm4sjt3Tk2d7/8Evx+TALE2/N0ALW4wt2ZHDI2
      0Wi8JUy2A8H0va+pWxKmLZOMO4dRRrPA1+Oz+GRBIJxwGQLByuNxclUT0xKkk858INtUuPXV
      XXwBGTkYI+IyJCgtTfF4vYFlWaQScUc+EJLN11/cRAr4seUgsYiLvdvz3Hu6jSQsYrF4S+h4
      h0MwcfsWuuTDsGWSMRd7q5vcmVzAJwtC0TjB9iEQgvnJe2w3LUwL0gnnMMrS69z++iE+H/jD
      ccJBp73bcw+Zy6uYpk0m6bJhlmTz1edf4gv6Eb4wsbBz86/mxizjixWwTRLxeEvoeAc29778
      CtvvxxR+ElHnhmlaeY070yuEI5GTFQZVmzWaqoHk85NKJJwOYJuUK1VsJILhKHGXBqGrDepN
      DUn2kUgknA3CtqjVqhgW+ENh1wZh6irVehNJkonGk4QC7fMIQaNeQTNsZH+IdNLZIGxTp1yt
      I0kS4ViCiEuDUBpVFM1E8gVIJV0cwDYoVWoIJEKRmGuD0JQGDUVDkv0kEi4OYFtUq1VMGwKh
      CImYs0EYmkKtoSBJMrFEkmD7R0PY1GtVdNPGFwiTSjjH1ZahUak1kCSJSDxJ2OWj0axXUHUL
      yRcknYw5HcAyKFZqIEmEI3GiLvMmtVmnqepIPj/JRMLpALZJpVrDEhAMRV0/kobapNZU8QfD
      J0QI28X85H0+uPklKysbnLlw0fkijCpffPAetx4tU7cCnBvqcXCsL8zwDx98wtbaGumRiyRC
      bS/CUrn32Qd8MbXIVqHBpfPODWIrm4v84t3fkFuaJzh4ke5Y24sQNlO3P+G34zMsrua5dtm5
      p6he3+Tdf3iPp0/msNMjDGacjebpg1t8dOsOS8tbjI5eaM3BAdArfPzeu9x/vERTjnGm37kf
      6OqTKd77+Lesr+XoP3ORaLDNXrPJnU/f5/PJZYp1nYtnnPtjFnLz/Py9D9laXSIydJFMpM1Z
      hcHDmx/x2cQcK7kiV0edAQqlnOOXv3yfpadPoPd86xroXczc/YKP7zxkfnmLa2MXnA6gl3jv
      F79k6skiejjLSE/KwbEw/YAPPvuC1ZUNRs5fINzeRsw6tz56jy8ml6nqcH7EmfG7uTTLz9//
      kPWierKiQMWaxumRYUBy1wGMJiR6GE5EkHGPV1dqTQb7+unORNDdYtqWjhmMM9ifQpbc49VK
      s0Gmu59T3QGaqksZYdG0fAwNDmNq7rvSWWqNcHqAgZQPdZ+4eLlpcGp4BNOyHKkQO/bWkZJ9
      nAqG9t1RrlRVGBkaIhYJOCfAAJaGFckwFI4T8Lt39o16g+6ePkZ6IqjtQQMA20KVQgwO9GHr
      7jvKGWqdWLafUxnZ/ZkBVdViZGgYVTdA4Dw/T6/hSw1wJhZo2U1jLwoVlTMjw0iyjOl22oqh
      QLyb4UgUv+xub63epL+3n2DopOwKsQtdVTEsHVWHTDrhHBIIG0XVUJsNgtEksfbcdcDUNAxT
      p6FZpNMp51dV2KiajqY2kfwR1zmAZRromkZT0UhksgR97RxiZ5sQXcMUfjIp5xxA2CaKoqEq
      CtFUxnVIoKsKhmmgmZBJJZxfRGGhKDqq0iAUS7kOCXYEMANF3bHXMSTYtVdtNvCFYq5DINPQ
      MXSNhmqQSmdaduPYa6+mqdhS0H3IZ5loqkZTUYinuwi5nMyuqwq6oaNbMpmUyxxAWDSbGqra
      JBJPu86bdFXFtA0UzSaTTrq2EVXTURt1/JGE6xDI1DUMQ0e3fScrDLq9NseDBw/59W8+pKG5
      fAGMJlMTD3hw7xafj8+6cpTzK9x/8JDffvg+G1WXPSUtnSfTD5l4+IAPPr/jyqGUN7n/4CFf
      ffwrnm67fOGFzfLTR0xMTvDuB5+5cpiNEuMPHnD38w94sOR+SvnG8hMePHzIu7/+GM1y+Q7p
      DR4+HGf865t8NbXoylHaXGZ8/CEfffAbCg0XxdlUeTz1gIkH9/j41kNXjkZxnfsPJvjyo1+x
      WHTZaNg2WZidYnJqkl99dNOVw6gXuP/gAXc+/RWTOfe9OtcWHvNwYoJ/eP8Td4VWqzH+YJz7
      X/2Wr2fX3EpQWF9gfPwhH/zmAypuPY2h8GhinAf37/DZvWlXjmp+jXvjD3n/k69O1hAoEk/S
      Zfp3FEW3jkn2k8lmiYf8rBvuu5aFInG6uizQmy2bND2H5COVzhIMx2hsub8ofyhCV1cXMVFv
      2WDpBYdEPJXBDsQp1N27e9kfoquri7Rfo7LPvpXRRIouEaJc13BtEbKfbLaLZEhia5/d1ULR
      OF1dAkNV3PfHlH2kM12Ew2HUsntdA+EoXV1dhKwGpuVmr0wilUEKJSg1N93tDezaKzeo7ZOC
      Ekum6ZKj5Kv77OYtB+jq6sIOCfL72BuOJejq2j1VyG3cKPtIZ7uIhoOsNd3bSDASo7uri6qW
      P1lDIKVeoaEa+AKhfaMixXIV24ZoIkk05KIUKnVqDRXZFyCVTrYsENnhsKhUKhiWTTi6Txep
      NSnXmiDJpDMZl2GUoFYtoxkWgXCMlMswyja0nYgGEslMhmB7dAaYezJDKtOFLxgmnXCJijQL
      TOWa9KWjxJIp10jS8uJTQtEUgWCIdMpl2KjXmF7K05NJEIm5Dxvz60s0xU7YMZVOO+21dGbn
      l8hmMgQjcZIuw6hmMcdqTSIbC5LKZJ3DKODp7GPS2W78wQipRNRpb2ObyXWN/nSEeCrtOmxc
      mJslkcri84dIpVzaiFrh0UqJ3kycaNx92LixuoDli5FMJU/WEOjB7S9Y3thiY6vgPglWC3zy
      +T22t7coVty3M5+busvswiqbW9tobpNPs87nN2+xubXNdqnqvA5sL09zf2qO7e0tZ247gDC5
      ffNzcptbbOSdeTEAWnmRz7+eZnt7i0rd/YtnVbbIVTUQwn1IEPCzNjePkOV9dz/2NUss5etI
      4MwDApB9bC4tYrI/h2woLOfyyLLkziFJVDbWqOn2vjtbS5LN6tIqkk9273kBvbTJVt3YPxFu
      115kGXufSbDcKLBUVEASjkU1APh95BYWELJvf3v1OkubJYRtnywHCPsC+MNhQqGgI0AAgC9A
      OOAnFAo581V2EXzGEQ45vw4Aso+wP0AoHCIYcB8B+nxBgsEgoVDY2YMAIBEOBAmGw4QD7ieX
      SL4Qod26OmLzu+geOYtUz5Mv19xfphTk/NkeNtY3aajuZwIk+08RNStsFyvuHw3Jz/lzQ2yu
      b+wsbHdBJNNLJmSymS/tk1EqM3JmhGp+i3LdPQrkDycZ7AqzuZlH2yeDtu/UGczqNoXKPvv5
      SyHOnu5iY2OLpuZ+JkB66CxBtcB2serurAS4eH6A9dyGc1HNLuJdA6R86s4iffeavB5cfufH
      DHdlyLh1bQCBFL/3k7fIZDKuXTnAqctvcmGoj0wqid+lG0aO8MOf3KArk3GNiABkhy/wxqXT
      ZNJppxYBIPl480c/pi+bIeWiigIEkwP8+PolMpkM4fbY/C62VpawAyFya2vuPYCts7hSQNIq
      5CvuBzyU1ldQ5TDbuWUMt434hcni8gYhWSe37T4ZbxS3qOoy5fVFFMvN4W1Wl9cIhSSW19zn
      AIZSZbOkouRXcIs9AGysLCMFA6yuuWS+AgiNpdUidrNAseHeeAsri5iBKJu5fc6cFgYLS1sE
      RZONgnsPX82vUzP9LOe2T5YDLM8+4ue//AW/+eATmm4xfLPO3U/f49+9+yG3Jp27EwBsrc7z
      737+93z64QdsuUVFbI2prz7m797/mE9ujrty1PJr/OLnP+fj999l0ZEIBwibJ+M3+fv3P+BX
      H3/pymE0C/zm3V/w/i/f5dFaW8q1bVGtlMkVGwz094HRcMTwTU2hlF/DCKQY7M2wVWhrvELQ
      qFVY2arQ19tNLGhTabT2ErapUSps0hRhent6qZTbdlpgZzuS9e08iXSW/kyI9bZ11FgGpVKB
      kiLo7h1ErTlTvzWlzvb2BoF4ljP9cZY22r7wu/ZulBT6+voxlIqjxzO0JqXtVaxQF8O9ada3
      y60FhE29WmFpq8pAfw8h2aDRNjy1DJVSYQNVjtHb002x1DY8FYJmvUJuq0g2m0Gpbp+sKND3
      RggTNrVqhdPnz1ErlTh17hKhtp7G1FVKapgLgzZlXeLa+fYjPgX1WoWBU2fQ61VSfWfoSbT2
      irapU2oIzp/KUq6rXBm96LS1USWWGUCgYccGON/bpljbJuWqwrmzQ1RLJS6PXXVwaEoDK5Cl
      zy+o0MUPTrUpuGLHAc5c2LH3wuiY4+RUQ1MoaTEuDNiUTYlr59rsFTb12s4za5RK9AydIxVt
      HX7ahkapKXNhOEW5aXH1olOxbtarpHuHEabK5bGrJysK9H0Twpam7vBgy+RMJsjlN9523seq
      8+mvfkNsZIxQLMEb551rBjYXH/Pp1BrvnM2SPvMDstG2+9gq9z/9DbXsFRI+g7evXXZwVDaX
      ePfmFP/oygBW3zVOpdtTP0we3fqU9eAIKVHnnRvXHRxqbYtfffgVb14cQuu5wuVe53Odf/gl
      05UgA1F46/p15/s1a/z63Q/oOzuKL9HDtTPOs59zTyf5cq7AtcEkg6M/cEl1Ufj6o/fRet8g
      EYQ3x847OIq5Od77apbLZ/pPSA9g6Tx9MrsbcbFRDB83rv+AvUNnpbLFzEJut7hKvP8Cl07t
      2R1O2CzPP6ZY2xkGqIrB1Rs3SAT3HOmjlJmYWdwtbiDH+nnzUmsu0MbyEzaKOxEmtd7g4o2f
      0BXZUxG9weTM090dCSx0KcmP3mz9spY2lljaKO0WrzN09R2G0k4HyOVLyHaAQlnZmdC1O0Cz
      RNUAq1bFb7u/qtxWER865WqViGEBbffRGlRVg3q1hulz7/FKxSKmbVKrVRFJA9odwDIoVhto
      0TrFfQ6+U6sFFFNQr9doRjRwcYCNfAkhJcmX95kkNPJUDIlorQqS+5G1K5slgqiUq4Ie04Z2
      B9Cq1A2LZrWK4aIkA+TzRYQwKFTrJ2s9wDOM3/1SlBv6vtfNel58fu9RR46l6Tticbu573Xb
      1MRnX97qyFFZfiDuL1Y6lvnt5591vK5vzYqbjzdcr6nVgpicnBCLa1vCLbVdCFtsLD8VE5PT
      otzQXDmMZlVMTU2KucU1Ye7DUdxYEg8npsRW2f15mFpTzExPidmni0K33Dmq+ZyYmJwQa9tV
      Vw7L1MXCk2kx9WhWqO4VEc3KtpicnBBL6/l97V1bmBETU49FVXF//3qjLCYnJ8T88rqw9uHI
      5xbEw4lHolBVXDlMtS6mH02J9UJNnEgH0DVNWO5PSAghhG2ZQtONjhyGrgnT/QntcNi20DT3
      RvUMpqEJfZ+X+Qyqqna8bpm60Iy2VtXIi5sPn4jGxoyYWHF3sKXZB2K10BS379xxJzYUcfPO
      uBDlRXF7dsu1SHXtkZhYqYj79+8667CLm7duCdHYFrenFt3vU5wTN2e2xMLMQ7FZcbf11te3
      hanWxe3xKXeO2oa4ObkgSqvTYma95lpkduq+2K6q+9ur1cTNe5NCFJ+K20+LrkW2FyfF7Hpt
      fw7bFjdv3Raiti5uT68IIYQ4IVEgQa1UoFCpUc6vk680aE8V3NmxwEStFXg88xS1XW4XNpu5
      NWpNFSHAHwg6EsOEsMhv5iiVqywvzlF3yTeyDJXN9VXmFpYo13WXUKqgXimyurrM6to6ht3h
      DFBANppsOxbv2zTrdaqVMuVylWq94RCHLEOjVqtRKpWoVqso7XFxIVCadaqVCqVKhWqt7ggc
      2KZBrVqlVC5TrVZpuMTFtWaDarWyW6bm1AFsk1qtRrlSplKpum42ZahNqnvu49ABhEWjXqdS
      LlMpV3cX+rfW1TRUqtUX9qp6WwRP2CiNvfY2HDqAbeo79djlaDq0E4HarO/aW6HeVE/IegCj
      wRe3J5EbeRaqNrXNRdK9Qy2Rkc35CXJKlIVH9zlzZoCHT9c5PbhnPYBt8sVXXxLAYj1fwheK
      OxZmG6VFbj+tkF98RKJ/mOnpWc6dbt0xefLrLyHgZ369gL61iB4fJL03P17N88ntJ4yMDONH
      5/aDac6faZ1HbK0usLK+TbFYoLA6y9NalPP9eyIjvhDxIBi+OOkwaKYgEWtNDYjGEphak57u
      bjRNQwqEiOxN/ZB9JKMhGnaInrgfzbSIRqMtTh8Ix5Etla5sF6ahI+SAY1VZJhGlpkv0pKJo
      ukE4EiOwV7gLxghLOtF4moBkYQiZRLR1fJ9NJag1dXqyKTRNIxCOta6i84eJ+QUimCARFGim
      IBlvtTcRj6OpL+yVA+HWVWWyn0TET0NE6YnJaKZNLBZtWTQVjCbAUJ5zCDlAtG0RUSYRoWb4
      6UmGsfCdkEmwJBEMhDh7fpCAmqSyWKS9B0j3DDB7b5zCdhGiy3T1OGf3gWiSi2NX0Zp1cusr
      BAJnWnYWkIJR9MoCyFApFUB2qriSsGg0FcLxLs6lAyw1TMjuaTS+ID6jwVouB0YDn98ppsla
      HSs6yJmeGJRNVjbbegnZT2//i4UplXLJIYSFInFSCYgmE/iE5dgtG0kmk+kiLiRkU6Fh+h2i
      nS8UY3h4R6hb39igx2UHjHi6m1SXD12po1i+lp30APCHGRoaQtgGq4srJHudC2pkX4j+oSz+
      /Y5D9QXoyqbRRACrUUREko48oHA8Tb8/QLHaJJnOOsVD2Ud3Tx/VcgnNlslm0o4ePhCOMzy8
      O3m2TYq1tt5KkkikM/hUi3gsgqIoJ6QHkAKkEwHqVoSRngSyL0iibbmbzx8gEolw4eo1zp8a
      we+TiIb3NExJJhH2UWkYJFIpIiE/kj/Y0ihkf4RkNMjIxasMdmdJpxLE2r5m6WyaumJz9dI5
      ItE44XCotVH4gmSSceKpFOFggMGhU45wbDAWRzJ1Aj6JQkNi7NxgazjW0llZWaFSrVKpVLhz
      /wEjp862rF9eezLO3FaNrc0ivXH4YjrH2ZYeT+ezTz6lXCwwmytQ31okmBkitqeuSn6RD74Y
      p9mo8dWtW8Qz/WTacvk/+ewzzg5l+fiz+2iFJZTYEJnonu9idYGPJqrI5TkaoSzTD8Y5d/Z0
      C8fNzz+iUqpSrDYJR6IEA21nIetlfvPZfdTtRXJagPnH05w7e7qlzObCJFOrNeZmHlLPr1Hz
      ZehO7nk3lsbNT3+LHUkRsBW+vvuA3sGRlverNUosr21Sq1Wp5Ne593SDi6f3OKwQfPXphxjC
      pqTAo6mHJ0QJNurcefgEvbbBfK7Mem7RkYS2vfyYlaLCyvw8ulrjwW448zmExaNHj7G0MrNL
      G+RXn5ArtYpUenGBieUquYVZFFMw8ciZL37v6ztE4wGezC2j5hd5nGvbmqO5yVdTKyxO3mdb
      hfH7dx0cjx/ep1Qp89lnt6C5zvhimyIpCVZXcsQSSVKpVOvQZhd+f4B4pp/Lp9LMzM45d2wT
      AjkY59roEJn+cyQiAcdmseHsCG+PDgMyia4+zg07l5BG/bDwdBaR7KMnHXXuthbJIteWWd0u
      Uy8XCMecyxQJRHnjrbc5P9zF5vJTNspOcdDv8yPJMj5Zcu5dBKiqTiIRJRBJc/3aBfKOREWB
      5AsgCxvTFgT8smMVnak22Co1SKVSpJIu68GBUCjC4NnLRNRtKk3jhAyBfAEifpnu4YvkFx8z
      t7rN6Ta9JhyJIWtBxs738Gj8HjWt7UVIMslwkGjPaQKb8zxYWOPs260kvkiCoKxx6dIFZqYm
      XfPSs7EQcmKAQSnHxKN5ONV2qorsIxKOcuZMN8T7KK0tOs2RfKR7Bzkr+ciG6qzr7UOgENff
      uU4gtJOw99Of/JRQsPVl9Z6+RNIQhEMBzodiDIs2J/EFeeedtwiEI7ydsikXLxNPtJaRZB/9
      py+QVRpE4u45S+/86KcozSa9wSiyNchAe35UIMXv/eRtyrUGkhwglXZuivXG1avIskQ4nuHi
      WMaZ7RlM8dN3rqALP7KtY58eQWob4o5cvMr2doGRH/0QOSzzw8ttjdcX5saPbuxOoCXevvEj
      4uHWYVI0M8Bb8V7CoSDYcX6WbBPSJPjBOz9E+CSSF8eI9o6cFCW4NbVVCNF6uvfu3/bCtkXb
      rm/t6bECIaSWSdJzDkkCIVw4XpSRdhgcHM/uI0kSCJOGYhJr23rjOYckoTWbyOEwAflkdLbf
      WQiBbujPIz/zs1P0nXuDrviL4adtmejG7shBr3N/boufvn2lhcMw9N1omeDeg8kT0gMgteSG
      OBZKuPzN5whPSm35Je3/38YhSS4crWUkF44WXslPLOp8hHs5QlHnbhAeXgK2zv3bt0n19iED
      K+tbdJ9u/SjW88s8nC/R25UAo0Gh6lS+p+7eIpjtxy8JNouVk+IAHjwcAF+Q02dPk+odJhKQ
      iUcDjohVLN3P6TNxRgZ6d3aHiLVlv0pw5txZSA6SDssg+07KEMiDh9cDb2Dq4XsNzwE8fK/x
      /wMXT9vdwabPWQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='New Cases_2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      sSQu4NYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      1i7ia82xAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='US' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
